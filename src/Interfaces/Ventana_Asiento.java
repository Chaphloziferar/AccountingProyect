/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Classes.Empleado;
import Classes.Subtotales;
import java.awt.Image;
import java.awt.Toolkit;
import java.text.DecimalFormat;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author PC 2
 */
public class Ventana_Asiento extends javax.swing.JFrame {

    private Subtotales admin, venta, produccion;

    private double Salario1 = 0, Salario2 = 0, Salario3 = 0;
    private double Extra_Hours1 = 0, Extra_Hours2 = 0, Extra_Hours3 = 0;
    private double Commisions1 = 0, Commisions2 = 0, Commisions3 = 0;
    private double Antiguedad1 = 0, Antiguedad2 = 0, Antiguedad3 = 0;
    private double INSS_Patronal1 = 0, INSS_Patronal2 = 0, INSS_Patronal3 = 0;
    private double INATEC1 = 0, INATEC2 = 0, INATEC3 = 0;
    private double Vacations1 = 0, Vacations2 = 0, Vacations3 = 0;
    private double Bonus1 = 0, Bonus2 = 0, Bonus3 = 0;
    private double Compensation1 = 0, Compensation2 = 0, Compensation3 = 0;
    private double INSS_Laboral1 = 0, INSS_Laboral2 = 0, INSS_Laboral3 = 0;
    private double IR_Laboral1 = 0, IR_Laboral2 = 0, IR_Laboral3 = 0;
    private double Deduction_Bank1 = 0, Deduction_Bank2 = 0, Deduction_Bank3 = 0;
    private double Deduction_Hospital1 = 0, Deduction_Hospital2 = 0, Deduction_Hospital3 = 0;
    private double Deduction_Syndicate1 = 0, Deduction_Syndicate2 = 0, Deduction_Syndicate3 = 0;
    private double Deduction_Debt1 = 0, Deduction_Debt2 = 0, Deduction_Debt3 = 0;
    private double Deduction_Retention1 = 0, Deduction_Retention2 = 0, Deduction_Retention3 = 0;
    private double Net_To_Recieve1 = 0, Net_To_Recieve2 = 0, Net_To_Recieve3 = 0;
    private double Admin_Expenses = 0;
    private double Venta_Expenses = 0;
    private double Production_Expenses = 0;
    private double Sum_Inss = 0;
    private double Sum_Ir = 0;
    private double Sum_Deduction_Bank = 0;
    private double Sum_Deduction_Hospital = 0;
    private double Sum_Deduction_Syndicate = 0;
    private double Sum_Deduction_Debt = 0;
    private double Sum_Deduction_Retention = 0;
    private double Retentions = 0;
    private double Nomina = 0;
    private double Sum_Inss_Patronal = 0;
    private double Sum_Inatec = 0;
    private double Sum_Vacations = 0;
    private double Sum_Bonus = 0;
    private double Sum_Compensation = 0;
    private double accumulated_expenses = 0;
    private double sum1 = 0, sum2 = 0;

    public Ventana_Asiento() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.pack();
        
        this.ajustarTablas();
        this.generarTabla();
    }
    
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Images/Icon.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_Nomina = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        Tabla_Salary = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        Tabla_INSS = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        Tabla_IR = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        Tabla_Bank = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        Tabla_Hospital = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        Tabla_Syndicate = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        Tabla_Debt = new javax.swing.JTable();
        jScrollPane15 = new javax.swing.JScrollPane();
        Tabla_Retention = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        Tabla_INATEC = new javax.swing.JTable();
        End = new javax.swing.JButton();
        Banner = new javax.swing.JLabel();
        Fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registro de nómina mensual - Asiento Contable");
        setBackground(new java.awt.Color(204, 204, 204));
        setIconImage(getIconImage());
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Tabla_Nomina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"GASTOS DE ADMINISTRACIÓN", "", null, null},
                {"Salarios", null, null, null},
                {"Horas Extras", null, null, null},
                {"Antiguedad", null, null, null},
                {"INSS Patronal", null, null, null},
                {"INATEC", null, null, null},
                {"Vacaciones", null, null, null},
                {"Treceavo Mes", null, null, null},
                {"Indemnización", null, null, null},
                {null, null, null, null},
                {"GASTOS DE VENTAS", null, null, null},
                {"Salarios", null, null, null},
                {"Horas Extras", null, null, null},
                {"Comisiones por Ventas", null, null, null},
                {"Antiguedad", null, null, null},
                {"INSS Patronal", null, null, null},
                {"INATEC", null, null, null},
                {"Vacaciones", null, null, null},
                {"Treceavo Mes", null, null, null},
                {"Indemnización", null, null, null},
                {null, null, null, null},
                {"GASTOS DE PRODUCCIÓN", null, null, null},
                {"Salarios", null, null, null},
                {"Horas Extras", null, null, null},
                {"Antiguedad", null, null, null},
                {"INSS Patronal", null, null, null},
                {"INATEC", null, null, null},
                {"Vacaciones", null, null, null},
                {"Treceavo Mes", null, null, null},
                {"Indemnización", null, null, null},
                {null, null, null, null},
                {"RETENCIONES POR PAGAR", null, null, null},
                {"INSS Laboral", null, null, null},
                {"IR Laboral", null, null, null},
                {"Deducción Bancaria", null, null, null},
                {"Deducción Hospitalaria", null, null, null},
                {"Sindicato Laboral", null, null, null},
                {"Deuda Laboral", null, null, null},
                {"Retencion Laboral", null, null, null},
                {null, null, null, null},
                {"NÓMINA POR PAGAR", null, null, null},
                {"Departamento de Administración", null, null, null},
                {"Drepartamento de Ventas", null, null, null},
                {"Departamento de Producción", null, null, null},
                {null, null, null, null},
                {"GASTOS ACUMULADOS POR PAGAR", null, null, null},
                {"INSS Patronal", null, null, null},
                {"INATEC", null, null, null},
                {"Vacaciones", null, null, null},
                {"Treceavo Mes", null, null, null},
                {"Indemnización", null, null, null},
                {null, null, null, null},
                {"SUMAS IGUALES", null, null, null}
            },
            new String [] {
                "Concepto", "Parcial", "Debe", "Haber"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Tabla_Nomina);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 419, 380));

        Tabla_Salary.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Nómina por pagar", null, null, null},
                {"Banco", null, null, null},
                {"Totales", null, null, null}
            },
            new String [] {
                "Concepto", "Parcial", "Debe", "Haber"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(Tabla_Salary);

        Tabla_INSS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Gastos Ac. por pagar", null, null, null},
                {"INSS Patronal", null, null, null},
                {"Retenciones por pagar", null, null, null},
                {"INSS Laboral", null, null, null},
                {"Banco", null, null, null},
                {"Totales", null, null, null}
            },
            new String [] {
                "Concepto", "Parcial", "Debe", "Haber"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(Tabla_INSS);

        Tabla_IR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Gastos Ac. por pagar", null, null, null},
                {"IR Laboral", null, null, null},
                {"Banco", null, null, null},
                {"Totales", null, null, null}
            },
            new String [] {
                "Concepto", "Parcial", "Debe", "Haber"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(Tabla_IR);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("1. Para registrar el pago de sueldos al personal correspondiente");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("2. Para registrar el pago retenido al seguro social");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("correspondiente a la nómina");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("3. Para registrar el pago a INATEC correspondiente a la nómina");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("5. Para registrar la cancelación de préstamos bancarios");

        Tabla_Bank.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Retenciones por pagar", null, null, null},
                {"Préstamos Bancarios", null, null, null},
                {"Banco", null, null, null},
                {"Totales", null, null, null}
            },
            new String [] {
                "Concepto", "Parcial", "Debe", "Haber"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane11.setViewportView(Tabla_Bank);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("6. Para registrar la cancelación de gastos médicos");

        Tabla_Hospital.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Retenciones por pagar", null, null, null},
                {"Gastos médicos", null, null, null},
                {"Banco", null, null, null},
                {"Totales", null, null, null}
            },
            new String [] {
                "Concepto", "Parcial", "Debe", "Haber"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane12.setViewportView(Tabla_Hospital);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("7. Para registrar la cancelación de cuota sindical");

        Tabla_Syndicate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Retenciones por pagar", null, null, null},
                {"Cuota sindical", null, null, null},
                {"Banco", null, null, null},
                {"Totales", null, null, null}
            },
            new String [] {
                "Concepto", "Parcial", "Debe", "Haber"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane13.setViewportView(Tabla_Syndicate);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("8. Para registrar la cancelación de deuda laboral");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("9. Para registrar la cancelación de retención laboral");

        Tabla_Debt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Retenciones por pagar", null, null, null},
                {"Deuda laboral", null, null, null},
                {"Banco", null, null, null},
                {"Totales", null, null, null}
            },
            new String [] {
                "Concepto", "Parcial", "Debe", "Haber"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane14.setViewportView(Tabla_Debt);

        Tabla_Retention.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Retenciones por pagar", null, null, null},
                {"Retencion laboral", null, null, null},
                {"Banco", null, null, null},
                {"Totales", null, null, null}
            },
            new String [] {
                "Concepto", "Parcial", "Debe", "Haber"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane15.setViewportView(Tabla_Retention);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("4. Para registrar la cancelación de la retención IR laboral");

        Tabla_INATEC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Gastos Ac. por pagar", null, null, null},
                {"INATEC", null, null, null},
                {"Banco", null, null, null},
                {"Totales", null, null, null}
            },
            new String [] {
                "Concepto", "Parcial", "Debe", "Haber"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane16.setViewportView(Tabla_INATEC);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane11)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane15, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane14)
                            .addComponent(jScrollPane16)
                            .addComponent(jScrollPane13)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 31, Short.MAX_VALUE))))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(172, 172, 172)
                                .addComponent(jLabel3))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addComponent(jLabel6))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(101, 101, 101)
                                .addComponent(jLabel7))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(jLabel8))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(jLabel9)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(43, 43, 43))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jScrollPane3.setViewportView(jPanel3);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(472, 140, 612, 440));

        End.setBackground(new java.awt.Color(153, 102, 0));
        End.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        End.setText("Volver al menú");
        End.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndActionPerformed(evt);
            }
        });
        jPanel2.add(End, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 550, -1, -1));

        Banner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Banner.png"))); // NOI18N
        jPanel2.add(Banner, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Fondo.png"))); // NOI18N
        jPanel2.add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 610));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndActionPerformed
        Ventana_Principal vp = new Ventana_Principal();
        vp.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_EndActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana_Asiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana_Asiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana_Asiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana_Asiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana_Asiento().setVisible(true);
            }
        });
    }

    public void generarTabla() {

        DecimalFormat decimales = new DecimalFormat("0.00");

        for (Empleado e : Ingresar_Empleado.Lista) {
            if (e.getDepartament().equalsIgnoreCase("Administración")) {
                Salario1 += e.getSalary();
                Extra_Hours1 += e.getExtra_Hours_Amount();
                Commisions1 += e.getCommisions();
                Antiguedad1 += e.getAntiguedad();
                INSS_Patronal1 += e.getINSS_Patronal();
                INATEC1 += e.getInatec();
                Vacations1 += e.getVacations();
                Bonus1 += e.getBonus();
                Compensation1 += e.getCompensation();
                INSS_Laboral1 += e.getINSS();
                IR_Laboral1 += e.getIR();
                Deduction_Bank1 += e.getDeduction_Bank();
                Deduction_Hospital1 += e.getDeduction_Hospital();
                Deduction_Syndicate1 += e.getDeduction_Syndicate();
                Deduction_Debt1 += e.getDeduction_debt();
                Deduction_Retention1 += e.getDeduction_retention();
                Net_To_Recieve1 += e.getNet_To_Receive();
            }
            if (e.getDepartament().equalsIgnoreCase("Ventas")) {
                Salario2 += e.getSalary();
                Extra_Hours2 += e.getExtra_Hours_Amount();
                Commisions2 += e.getCommisions();
                Antiguedad2 += e.getAntiguedad();
                INSS_Patronal2 += e.getINSS_Patronal();
                INATEC2 += e.getInatec();
                Vacations2 += e.getVacations();
                Bonus2 += e.getBonus();
                Compensation2 += e.getCompensation();
                INSS_Laboral2 += e.getINSS();
                IR_Laboral2 += e.getIR();
                Deduction_Bank2 += e.getDeduction_Bank();
                Deduction_Hospital2 += e.getDeduction_Hospital();
                Deduction_Syndicate2 += e.getDeduction_Syndicate();
                Deduction_Debt2 += e.getDeduction_debt();
                Deduction_Retention2 += e.getDeduction_retention();
                Net_To_Recieve2 += e.getNet_To_Receive();
            }
            if (e.getDepartament().equalsIgnoreCase("Producción")) {
                Salario3 += e.getSalary();
                Extra_Hours3 += e.getExtra_Hours_Amount();
                Commisions3 += e.getCommisions();
                Antiguedad3 += e.getAntiguedad();
                INSS_Patronal3 += e.getINSS_Patronal();
                INATEC3 += e.getInatec();
                Vacations3 += e.getVacations();
                Bonus3 += e.getBonus();
                Compensation3 += e.getCompensation();
                INSS_Laboral3 += e.getINSS();
                IR_Laboral3 += e.getIR();
                Deduction_Bank3 += e.getDeduction_Bank();
                Deduction_Hospital3 += e.getDeduction_Hospital();
                Deduction_Syndicate3 += e.getDeduction_Syndicate();
                Deduction_Debt3 += e.getDeduction_debt();
                Deduction_Retention3 += e.getDeduction_retention();
                Net_To_Recieve3 += e.getNet_To_Receive();
            }
        }

        admin = new Subtotales(Salario1, Extra_Hours1, Commisions1, Antiguedad1, INSS_Patronal1, INATEC1, Vacations1, Bonus1, Compensation1,
                INSS_Laboral1, IR_Laboral1, Deduction_Bank1, Deduction_Hospital1, Deduction_Syndicate1, Deduction_Debt1, Deduction_Retention1, Net_To_Recieve1);
        venta = new Subtotales(Salario2, Extra_Hours2, Commisions2, Antiguedad2, INSS_Patronal2, INATEC2, Vacations2, Bonus2, Compensation2,
                INSS_Laboral2, IR_Laboral2, Deduction_Bank2, Deduction_Hospital2, Deduction_Syndicate2, Deduction_Debt2, Deduction_Retention2, Net_To_Recieve2);
        produccion = new Subtotales(Salario3, Extra_Hours3, Commisions3, Antiguedad3, INSS_Patronal3, INATEC3, Vacations3, Bonus3, Compensation3,
                INSS_Laboral3, IR_Laboral3, Deduction_Bank3, Deduction_Hospital3, Deduction_Syndicate3, Deduction_Debt3, Deduction_Retention3, Net_To_Recieve3);

        Admin_Expenses = admin.getSalarios() + admin.getExtra_Hours() + admin.getCommisions() + admin.getAntiguedad() + admin.getINSS_Patronal()
                + admin.getINATEC() + admin.getVacations() + admin.getBonus() + admin.getCompensation();
        Venta_Expenses = venta.getSalarios() + venta.getExtra_Hours() + venta.getCommisions() + venta.getAntiguedad() + venta.getINSS_Patronal()
                + venta.getINATEC() + venta.getVacations() + venta.getBonus() + venta.getCompensation();
        Production_Expenses = produccion.getSalarios() + produccion.getExtra_Hours() + produccion.getCommisions() + produccion.getAntiguedad()
                + produccion.getINSS_Patronal() + produccion.getINATEC() + produccion.getVacations() + produccion.getBonus() + produccion.getCompensation();

        Sum_Inss = admin.getINSS_Laboral() + venta.getINSS_Laboral() + produccion.getINSS_Laboral();
        Sum_Ir = admin.getIR_Laboral() + venta.getIR_Laboral() + produccion.getIR_Laboral();
        Sum_Deduction_Bank = admin.getDeduction_Bank() + venta.getDeduction_Bank() + produccion.getDeduction_Bank();
        Sum_Deduction_Hospital = admin.getDeduction_Hospital() + venta.getDeduction_Hospital() + produccion.getDeduction_Hospital();
        Sum_Deduction_Syndicate = admin.getDeduction_Syndicate() + venta.getDeduction_Syndicate() + produccion.getDeduction_Syndicate();
        Sum_Deduction_Debt = admin.getDeduction_Debt() + venta.getDeduction_Debt() + produccion.getDeduction_Debt();
        Sum_Deduction_Retention = admin.getDeduction_Retention() + venta.getDeduction_Retention() + produccion.getDeduction_Retention();

        Retentions = Sum_Inss + Sum_Ir + Sum_Deduction_Bank + Sum_Deduction_Hospital + Sum_Deduction_Syndicate + Sum_Deduction_Debt + Sum_Deduction_Retention;

        Nomina = admin.getNet_To_Recieve() + venta.getNet_To_Recieve() + produccion.getNet_To_Recieve();

        Sum_Inss_Patronal = admin.getINSS_Patronal() + venta.getINSS_Patronal() + produccion.getINSS_Patronal();
        Sum_Inatec = admin.getINATEC() + venta.getINATEC() + produccion.getINATEC();
        Sum_Vacations = admin.getVacations() + venta.getVacations() + produccion.getVacations();
        Sum_Bonus = admin.getBonus() + venta.getBonus() + produccion.getBonus();
        Sum_Compensation = admin.getCompensation() + venta.getCompensation() + produccion.getCompensation();

        accumulated_expenses = Sum_Inss_Patronal + Sum_Inatec + Sum_Vacations + Sum_Bonus + Sum_Compensation;
        
        sum1 = Admin_Expenses + Venta_Expenses + Production_Expenses;
        sum2 = Retentions + Nomina + accumulated_expenses;
        
        Tabla_Nomina.setValueAt(decimales.format(Admin_Expenses), 0, 2);
        Tabla_Nomina.setValueAt(decimales.format(admin.getSalarios()), 1, 1);
        Tabla_Nomina.setValueAt(decimales.format(admin.getExtra_Hours()), 2, 1);
        Tabla_Nomina.setValueAt(decimales.format(admin.getAntiguedad()), 3, 1);
        Tabla_Nomina.setValueAt(decimales.format(admin.getINSS_Patronal()), 4, 1);
        Tabla_Nomina.setValueAt(decimales.format(admin.getINATEC()), 5, 1);
        Tabla_Nomina.setValueAt(decimales.format(admin.getVacations()), 6, 1);
        Tabla_Nomina.setValueAt(decimales.format(admin.getBonus()), 7, 1);
        Tabla_Nomina.setValueAt(decimales.format(admin.getCompensation()), 8, 1);

        Tabla_Nomina.setValueAt(decimales.format(Venta_Expenses), 10, 2);
        Tabla_Nomina.setValueAt(decimales.format(venta.getSalarios()), 11, 1);
        Tabla_Nomina.setValueAt(decimales.format(venta.getExtra_Hours()), 12, 1);
        Tabla_Nomina.setValueAt(decimales.format(venta.getCommisions()), 13, 1);
        Tabla_Nomina.setValueAt(decimales.format(venta.getAntiguedad()), 14, 1);
        Tabla_Nomina.setValueAt(decimales.format(venta.getINSS_Patronal()), 15, 1);
        Tabla_Nomina.setValueAt(decimales.format(venta.getINATEC()), 16, 1);
        Tabla_Nomina.setValueAt(decimales.format(venta.getVacations()), 17, 1);
        Tabla_Nomina.setValueAt(decimales.format(venta.getBonus()), 18, 1);
        Tabla_Nomina.setValueAt(decimales.format(venta.getCompensation()), 19, 1);

        Tabla_Nomina.setValueAt(decimales.format(Production_Expenses), 21, 2);
        Tabla_Nomina.setValueAt(decimales.format(produccion.getSalarios()), 22, 1);
        Tabla_Nomina.setValueAt(decimales.format(produccion.getExtra_Hours()), 23, 1);
        Tabla_Nomina.setValueAt(decimales.format(produccion.getAntiguedad()), 24, 1);
        Tabla_Nomina.setValueAt(decimales.format(produccion.getINSS_Patronal()), 25, 1);
        Tabla_Nomina.setValueAt(decimales.format(produccion.getINATEC()), 26, 1);
        Tabla_Nomina.setValueAt(decimales.format(produccion.getVacations()), 27, 1);
        Tabla_Nomina.setValueAt(decimales.format(produccion.getBonus()), 28, 1);
        Tabla_Nomina.setValueAt(decimales.format(produccion.getCompensation()), 29, 1);

        Tabla_Nomina.setValueAt(decimales.format(Retentions), 31, 3);
        Tabla_Nomina.setValueAt(decimales.format(Sum_Inss), 32, 1);
        Tabla_Nomina.setValueAt(decimales.format(Sum_Ir), 33, 1);
        Tabla_Nomina.setValueAt(decimales.format(Sum_Deduction_Bank), 34, 1);
        Tabla_Nomina.setValueAt(decimales.format(Sum_Deduction_Hospital), 35, 1);
        Tabla_Nomina.setValueAt(decimales.format(Sum_Deduction_Syndicate), 36, 1);
        Tabla_Nomina.setValueAt(decimales.format(Sum_Deduction_Debt), 37, 1);
        Tabla_Nomina.setValueAt(decimales.format(Sum_Deduction_Retention), 38, 1);

        Tabla_Nomina.setValueAt(decimales.format(Nomina), 40, 3);
        Tabla_Nomina.setValueAt(decimales.format(admin.getNet_To_Recieve()), 41, 1);
        Tabla_Nomina.setValueAt(decimales.format(venta.getNet_To_Recieve()), 42, 1);
        Tabla_Nomina.setValueAt(decimales.format(produccion.getNet_To_Recieve()), 43, 1);
        
        Tabla_Nomina.setValueAt(decimales.format(accumulated_expenses), 45, 3);
        Tabla_Nomina.setValueAt(decimales.format(Sum_Inss_Patronal), 46, 1);
        Tabla_Nomina.setValueAt(decimales.format(Sum_Inatec), 47, 1);
        Tabla_Nomina.setValueAt(decimales.format(Sum_Vacations), 48, 1);
        Tabla_Nomina.setValueAt(decimales.format(Sum_Bonus), 49, 1);
        Tabla_Nomina.setValueAt(decimales.format(Sum_Compensation), 50, 1);
        
        Tabla_Nomina.setValueAt(decimales.format(sum1), 52, 2);
        Tabla_Nomina.setValueAt(decimales.format(sum2), 52, 3);
        
        Tabla_Salary.setValueAt(decimales.format(Nomina), 0, 2);
        Tabla_Salary.setValueAt(decimales.format(Nomina), 1, 3);
        Tabla_Salary.setValueAt(decimales.format(Nomina), 2, 2);
        Tabla_Salary.setValueAt(decimales.format(Nomina), 2, 3);
        
        Tabla_INSS.setValueAt(decimales.format(Sum_Inss_Patronal), 0, 2);
        Tabla_INSS.setValueAt(decimales.format(Sum_Inss_Patronal), 1, 1);
        Tabla_INSS.setValueAt(decimales.format(Sum_Inss), 2, 2);
        Tabla_INSS.setValueAt(decimales.format(Sum_Inss), 3, 1);
        Tabla_INSS.setValueAt(decimales.format(Sum_Inss_Patronal + Sum_Inss), 4, 3);
        Tabla_INSS.setValueAt(decimales.format(Sum_Inss_Patronal + Sum_Inss), 5, 2);
        Tabla_INSS.setValueAt(decimales.format(Sum_Inss_Patronal + Sum_Inss), 5, 3);
        
        Tabla_INATEC.setValueAt(decimales.format(Sum_Inatec), 0, 2);
        Tabla_INATEC.setValueAt(decimales.format(Sum_Inatec), 1, 1);
        Tabla_INATEC.setValueAt(decimales.format(Sum_Inatec), 2, 3);
        Tabla_INATEC.setValueAt(decimales.format(Sum_Inatec), 3, 2);
        Tabla_INATEC.setValueAt(decimales.format(Sum_Inatec), 3, 3);
        
        Tabla_IR.setValueAt(decimales.format(Sum_Ir), 0, 2);
        Tabla_IR.setValueAt(decimales.format(Sum_Ir), 1, 1);
        Tabla_IR.setValueAt(decimales.format(Sum_Ir), 2, 3);
        Tabla_IR.setValueAt(decimales.format(Sum_Ir), 3, 2);
        Tabla_IR.setValueAt(decimales.format(Sum_Ir), 3, 3);
        
        Tabla_Bank.setValueAt(decimales.format(Sum_Deduction_Bank), 0, 2);
        Tabla_Bank.setValueAt(decimales.format(Sum_Deduction_Bank), 1, 1);
        Tabla_Bank.setValueAt(decimales.format(Sum_Deduction_Bank), 2, 3);
        Tabla_Bank.setValueAt(decimales.format(Sum_Deduction_Bank), 3, 2);
        Tabla_Bank.setValueAt(decimales.format(Sum_Deduction_Bank), 3, 3);
        
        Tabla_Hospital.setValueAt(decimales.format(Sum_Deduction_Hospital), 0, 2);
        Tabla_Hospital.setValueAt(decimales.format(Sum_Deduction_Hospital), 1, 1);
        Tabla_Hospital.setValueAt(decimales.format(Sum_Deduction_Hospital), 2, 3);
        Tabla_Hospital.setValueAt(decimales.format(Sum_Deduction_Hospital), 3, 2);
        Tabla_Hospital.setValueAt(decimales.format(Sum_Deduction_Hospital), 3, 3);
        
        Tabla_Syndicate.setValueAt(decimales.format(Sum_Deduction_Syndicate), 0, 2);
        Tabla_Syndicate.setValueAt(decimales.format(Sum_Deduction_Syndicate), 1, 1);
        Tabla_Syndicate.setValueAt(decimales.format(Sum_Deduction_Syndicate), 2, 3);
        Tabla_Syndicate.setValueAt(decimales.format(Sum_Deduction_Syndicate), 3, 2);
        Tabla_Syndicate.setValueAt(decimales.format(Sum_Deduction_Syndicate), 3, 3);
        
        Tabla_Debt.setValueAt(decimales.format(Sum_Deduction_Debt), 0, 2);
        Tabla_Debt.setValueAt(decimales.format(Sum_Deduction_Debt), 1, 1);
        Tabla_Debt.setValueAt(decimales.format(Sum_Deduction_Debt), 2, 3);
        Tabla_Debt.setValueAt(decimales.format(Sum_Deduction_Debt), 3, 2);
        Tabla_Debt.setValueAt(decimales.format(Sum_Deduction_Debt), 3, 3);
        
        Tabla_Retention.setValueAt(decimales.format(Sum_Deduction_Retention), 0, 2);
        Tabla_Retention.setValueAt(decimales.format(Sum_Deduction_Retention), 1, 1);
        Tabla_Retention.setValueAt(decimales.format(Sum_Deduction_Retention), 2, 3);
        Tabla_Retention.setValueAt(decimales.format(Sum_Deduction_Retention), 3, 2);
        Tabla_Retention.setValueAt(decimales.format(Sum_Deduction_Retention), 3, 3);
    }
    
    public void ajustarTablas(){
        Tabla_Nomina.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        Tabla_Nomina.doLayout();

        ((DefaultTableCellRenderer) Tabla_Nomina.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        ((DefaultTableCellRenderer) Tabla_Salary.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        ((DefaultTableCellRenderer) Tabla_INSS.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        ((DefaultTableCellRenderer) Tabla_INATEC.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        ((DefaultTableCellRenderer) Tabla_IR.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        ((DefaultTableCellRenderer) Tabla_Bank.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        ((DefaultTableCellRenderer) Tabla_Hospital.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        ((DefaultTableCellRenderer) Tabla_Syndicate.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        ((DefaultTableCellRenderer) Tabla_Debt.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        ((DefaultTableCellRenderer) Tabla_Retention.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        TableColumnModel columnModel = Tabla_Nomina.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(250);
        columnModel.getColumn(1).setPreferredWidth(150);
        columnModel.getColumn(2).setPreferredWidth(150);
        columnModel.getColumn(3).setPreferredWidth(150);

        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(SwingConstants.CENTER);
        Tabla_Nomina.getColumnModel().getColumn(0).setCellRenderer(tcr);
        Tabla_Nomina.getColumnModel().getColumn(1).setCellRenderer(tcr);
        Tabla_Nomina.getColumnModel().getColumn(2).setCellRenderer(tcr);
        Tabla_Nomina.getColumnModel().getColumn(3).setCellRenderer(tcr);
        
        Tabla_Salary.getColumnModel().getColumn(0).setCellRenderer(tcr);
        Tabla_Salary.getColumnModel().getColumn(1).setCellRenderer(tcr);
        Tabla_Salary.getColumnModel().getColumn(2).setCellRenderer(tcr);
        Tabla_Salary.getColumnModel().getColumn(3).setCellRenderer(tcr);
        
        Tabla_INSS.getColumnModel().getColumn(0).setCellRenderer(tcr);
        Tabla_INSS.getColumnModel().getColumn(1).setCellRenderer(tcr);
        Tabla_INSS.getColumnModel().getColumn(2).setCellRenderer(tcr);
        Tabla_INSS.getColumnModel().getColumn(3).setCellRenderer(tcr);
        
        Tabla_IR.getColumnModel().getColumn(0).setCellRenderer(tcr);
        Tabla_IR.getColumnModel().getColumn(1).setCellRenderer(tcr);
        Tabla_IR.getColumnModel().getColumn(2).setCellRenderer(tcr);
        Tabla_IR.getColumnModel().getColumn(3).setCellRenderer(tcr);
        
        Tabla_INATEC.getColumnModel().getColumn(0).setCellRenderer(tcr);
        Tabla_INATEC.getColumnModel().getColumn(1).setCellRenderer(tcr);
        Tabla_INATEC.getColumnModel().getColumn(2).setCellRenderer(tcr);
        Tabla_INATEC.getColumnModel().getColumn(3).setCellRenderer(tcr);
        
        Tabla_Bank.getColumnModel().getColumn(0).setCellRenderer(tcr);
        Tabla_Bank.getColumnModel().getColumn(1).setCellRenderer(tcr);
        Tabla_Bank.getColumnModel().getColumn(2).setCellRenderer(tcr);
        Tabla_Bank.getColumnModel().getColumn(3).setCellRenderer(tcr);
        
        Tabla_Hospital.getColumnModel().getColumn(0).setCellRenderer(tcr);
        Tabla_Hospital.getColumnModel().getColumn(1).setCellRenderer(tcr);
        Tabla_Hospital.getColumnModel().getColumn(2).setCellRenderer(tcr);
        Tabla_Hospital.getColumnModel().getColumn(3).setCellRenderer(tcr);
        
        Tabla_Syndicate.getColumnModel().getColumn(0).setCellRenderer(tcr);
        Tabla_Syndicate.getColumnModel().getColumn(1).setCellRenderer(tcr);
        Tabla_Syndicate.getColumnModel().getColumn(2).setCellRenderer(tcr);
        Tabla_Syndicate.getColumnModel().getColumn(3).setCellRenderer(tcr);
        
        Tabla_Debt.getColumnModel().getColumn(0).setCellRenderer(tcr);
        Tabla_Debt.getColumnModel().getColumn(1).setCellRenderer(tcr);
        Tabla_Debt.getColumnModel().getColumn(2).setCellRenderer(tcr);
        Tabla_Debt.getColumnModel().getColumn(3).setCellRenderer(tcr);
        
        Tabla_Retention.getColumnModel().getColumn(0).setCellRenderer(tcr);
        Tabla_Retention.getColumnModel().getColumn(1).setCellRenderer(tcr);
        Tabla_Retention.getColumnModel().getColumn(2).setCellRenderer(tcr);
        Tabla_Retention.getColumnModel().getColumn(3).setCellRenderer(tcr);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Banner;
    private javax.swing.JButton End;
    private javax.swing.JLabel Fondo;
    private javax.swing.JTable Tabla_Bank;
    private javax.swing.JTable Tabla_Debt;
    private javax.swing.JTable Tabla_Hospital;
    private javax.swing.JTable Tabla_INATEC;
    private javax.swing.JTable Tabla_INSS;
    private javax.swing.JTable Tabla_IR;
    private javax.swing.JTable Tabla_Nomina;
    private javax.swing.JTable Tabla_Retention;
    private javax.swing.JTable Tabla_Salary;
    private javax.swing.JTable Tabla_Syndicate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    // End of variables declaration//GEN-END:variables
}
